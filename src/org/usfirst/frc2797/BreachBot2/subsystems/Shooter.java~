// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2797.BreachBot2.subsystems;

import org.usfirst.frc2797.BreachBot2.RobotMap;
import org.usfirst.frc2797.BreachBot2.commands.*;

import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder.IndexingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Shooter extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Encoder leftShooterEncoder = RobotMap.shooterLeftShooterEncoder;
    private final Encoder rightShooterEncoder = RobotMap.shooterRightShooterEncoder;
    private final SpeedController leftShooterTalon = RobotMap.shooterLeftShooterTalon;
    private final SpeedController rightShooterTalon = RobotMap.shooterRightShooterTalon;
    private final AnalogGyro shooterAngle = RobotMap.shooterShooterAngle;
    private final SpeedController shooterMotor = RobotMap.shooterShooterMotor;
    private final Relay kicker = RobotMap.shooterKicker;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    public void initializeGyro() {
    	
    	shooterAngle.initGyro();
    	
    }
    
    public void setEncoderParameters(){
    	leftShooterEncoder.setMinRate(10);
    	leftShooterEncoder.setDistancePerPulse(20);
    	leftShooterEncoder.setSamplesToAverage(64);
    	rightShooterEncoder.setMinRate(10);
    	rightShooterEncoder.setDistancePerPulse(20);
    	rightShooterEncoder.setSamplesToAverage(64);
    	
    	
    	
    }
    
    public double getLeftShooterRPM(){
    	return leftShooterEncoder.getRate();	
    }
    
    public double getRightShooterRPM(){
    	return rightShooterEncoder.getRate();
    }
    
    public double getAngle() {
    	
    	return shooterAngle.getAngle();
    	
    }
    
    public void setShooterMotor(double triggervalue){
    	shooterMotor.set(triggervalue);
    }
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
}

